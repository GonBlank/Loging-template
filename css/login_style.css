@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');


body {
    font-family: "Poppins", sans-serif;
    background-image: url('../img/background_light.jpg');
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    margin: 0;
}

main {
    display: flex;
    flex-direction: column;
    height: 100vh;
    justify-content: center;
    align-items: center;
}

form {
    display: flex;
    flex-direction: column;
    color: black;
    padding: 40px;
    padding-top: 0px;
    row-gap: 30px;
    align-items: center;
    box-sizing: border-box;
    width: 100%;
    max-width: 400px;
    min-width: 230px;
}

input {
    font-family: "Poppins", sans-serif;
    font-size: 1rem;
    border-radius: 10px;
    border: 1px solid;
    height: 45px;
    transition: .3s ease;
}

input:hover {
    filter: drop-shadow(0px 0px 5px #898989);
}


.form-btn {
    font-family: "Poppins", sans-serif;
    height: 45px;
    border-radius: 5px;
    border: none;
    cursor: pointer;
    width: 100%;
    background-color: #212529;
    color: whitesmoke;
    animation: cubic-bezier(0, 0.89, 1, 0.94);
    transition: .2s;
}


.login-btn:hover {
    background-color: #025C3B;
    color: whitesmoke;
}

.signup-btn:hover,
.password-recovery-btn:hover {
    background-color: #2e516b;
}

.form-btn:hover {
    scale: 1.1;
}

.form-btn i {
    opacity: 0;
    color: whitesmoke;
    transition: .2s;
    animation: ease-in;
    margin-left: -1rem;
}

.form-btn:hover i {
    opacity: 1;
}

.form-btn span {
    transition: 0.2s ease-in-out;
}

.form-btn:hover span {
    opacity: 1;
    margin-left: .5rem;
}

/* Glassmorphism card effect */
.card {
    backdrop-filter: blur(16px) saturate(180%);
    -webkit-backdrop-filter: blur(16px) saturate(180%);
    background-color: rgba(255, 255, 255, 0.40);
    border-radius: 12px;
    border: 1px solid rgba(209, 213, 219, 0.3);
}

form a {
    color: #272727;
    transition: .3s ease;
}

form a:hover {
    filter: drop-shadow(0px 0px 5px #272727);
}



form h1,
h2,
p {
    cursor: context-menu;
}

.label {
    width: 100%;
    display: grid;
    grid-template-areas: "input";
}

.input {
    grid-area: input;
    padding-left: 10px;
    text-align: center;
}

.label__name {
    grid-area: input;
    z-index: 1;
    height: 100%;
    display: flex;
    align-items: center;
    transition: .2s;
    cursor: pointer;
    justify-self: center;
}

.input:focus+.label__name,
.input:not(:placeholder-shown)+.label__name {
    transform: translateY(-80%) scale(.9);
}


/*Modal*/

.modal-btn {
    background-color: transparent;
    color: black;
    border: none;
    font: inherit;
    text-decoration: underline;
}

/* Blurring animation for opening the modal */
@keyframes blurring {
    from {
        backdrop-filter: blur(0px) saturate(180%);
    }

    to {
        backdrop-filter: blur(2px) saturate(180%);
    }
}

/* Deblurring animation for closing the modal */
@keyframes deblurring {
    from {
        backdrop-filter: blur(2px) saturate(180%);
    }

    to {
        backdrop-filter: blur(0px) saturate(180%);
    }
}

/* The Modal (background) */
.modal {
    display: none;
    justify-content: center;
    align-items: center;
    text-align: center;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
    /* Black w/ opacity */
}

/* Apply the blurring animation */
.modal.blurring {
    animation: blurring 500ms ease forwards;
}

/* Apply the deblurring animation */
.modal.deblurring {
    animation: deblurring 500ms ease forwards;
}

/* Modal Content */
.modal-content {
    border-radius: 10px;
    background-color: #fefefef6;
    margin: auto;
    padding: 10px;
    width: 80%;
    animation: appear .4s cubic-bezier(0, 0.62, 0.27, 0.96);
    /* Animaci√≥n de deslizamiento */
    width: 100%;
    max-width: 400px;
    min-width: 230px;
}

@keyframes appear {
    from {
        transform: scale(0);
    }

    to {
        transform: scale(1);
    }
}

@keyframes disappear {
    from {
        transform: scale(1);
    }

    to {
        transform: scale(0);
    }
}

.modal-content.disappearing {
    animation: disappear 200ms cubic-bezier(0, 1.2, 0.13, 0.96);
    animation-fill-mode: forwards;
}

/* The Close Button */
.close {
    color: #aaaaaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}

/*-checkbox-*/

@supports (-webkit-appearance: none) or (-moz-appearance: none) {
    .checkbox-wrapper-13 input[type=checkbox] {
        --active: #212529;
        --active-inner: #fff;
        --border: #BBC1E1;
        --border-hover: #212529;
        --background: #fff;
        --disabled: #F6F8FF;
        --disabled-inner: #E1E6F9;
        -webkit-appearance: none;
        -moz-appearance: none;
        height: 21px;
        outline: none;
        display: inline-block;
        vertical-align: top;
        position: relative;
        margin: 0;
        cursor: pointer;
        border: 1px solid var(--bc, var(--border));
        background: var(--b, var(--background));
        transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
    }

    .checkbox-wrapper-13 input[type=checkbox]:after {
        content: "";
        display: block;
        left: 0;
        top: 0;
        position: absolute;
        transition: transform 0.3s ease, opacity 0.2s;
    }

    .checkbox-wrapper-13 input[type=checkbox]:checked {
        --b: var(--active);
        --bc: var(--active);
        --d-o: .3s;
        --d-t: .6s;
        --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }

    .checkbox-wrapper-13 input[type=checkbox]:disabled {
        --b: var(--disabled);
        cursor: not-allowed;
        opacity: 0.9;
    }

    .checkbox-wrapper-13 input[type=checkbox]:disabled:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
    }

    .checkbox-wrapper-13 input[type=checkbox]:disabled+label {
        cursor: not-allowed;
    }

    .checkbox-wrapper-13 input[type=checkbox]:hover:not(:checked):not(:disabled) {
        --bc: var(--border-hover);
    }

    .checkbox-wrapper-13 input[type=checkbox]:focus {
        box-shadow: 0 0 0 var(--focus);
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch) {
        width: 21px;
        border-radius: 7px;
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):after {
        content: "";
        display: block;
        width: 5px;
        height: 9px;
        border: 2px solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: 7px;
        top: 4px;
        transform: rotate(var(--r, 20deg));
        opacity: var(--o, 0);
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):checked {
        --o: 1;
        --r: 43deg;
    }

    .checkbox-wrapper-13 input[type=checkbox]+label {
        display: inline-block;
        vertical-align: middle;
        cursor: pointer;
        margin-left: 4px;
    }
}

.checkbox-wrapper-13 * {
    box-sizing: inherit;
}

.checkbox-wrapper-13 *:before,
.checkbox-wrapper-13 *:after {
    box-sizing: inherit;
}



.content-loading {
    border: 1px solid black;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 5px;
    height: 45px;
    border: none;
    cursor: pointer;
    width: 100%;
    background-color: #898989;
    color: whitesmoke;
}

.loading {
    opacity: 1;
    animation: spin 1s ease infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

.d-none {
    display: none !important;
}